---
import Layout from "./Layout.astro";

import PostHeader from "../components/PostHeader.astro";
import CategoryCloud from "../components/CategoryCloud.astro";
import { formatBlogPosts } from "../js/utils";
import PostCard from "../components/PostCard.astro";
import RelatedPosts from "../components/RelatedPosts.astro";

const { frontmatter } = Astro.props;
const { title, description, date, category, author, image } = frontmatter;

const allPosts = await Astro.glob("../pages/blog/*.md");
const formattedPosts = formatBlogPosts(allPosts);
const relatedPost = formattedPosts
  .filter(
    (post: any) =>
      post.frontmatter.category.toLowerCase() ===category.toLowerCase() &&
      post.frontmatter.title.toLowerCase() !== title.toLowerCase()
  )
  .slice(0, 3);
---

<Layout {title} {description}  image={frontmatter.image} {frontmatter} robots={frontmatter.robots}>
  <PostHeader {title} {date} {category} {author} {image} />
  <div
    class="post-content"
    style={{
      display: "flex",
      flexDirection: "row",
      gap: "1rem",
      alignItems: "start",
    }}
  >
    <div class="content">
      <slot />
    </div>
    <div class="sidebar">
      <aside
        class="container"
        aria-label="Blog Categories"
        style={{
          display: "flex",
          flexDirection: "column",
          gap: "1rem",
          justifyContent: "start",
          alignItems: "start",
        }}
      >
        <h2 class="h3">Blog Categories</h2>
        <CategoryCloud />
      </aside>
      {
        relatedPost.length > 0 && (
          <aside class="container" aria-label="Related Posts">
            <h1 class="h3">Related Category</h1>
            <div class="post-container">
              {relatedPost.map((post: any) => (
                <RelatedPosts {relatedPost}/>
              ))}
            </div>
          </aside>
        )
      }
    </div>
  </div>
</Layout>
